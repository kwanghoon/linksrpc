
@inproceedings{Cooper:2009:RC:1599410.1599439,
 author = {Cooper, Ezra K. and Wadler, Philip},
 title = {The RPC Calculus},
 booktitle = {Proceedings of the 11th ACM SIGPLAN Conference on Principles and Practice of Declarative Programming},
 series = {PPDP '09},
 year = {2009},
 isbn = {978-1-60558-568-0},
 location = {Coimbra, Portugal},
 pages = {231--242},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1599410.1599439},
 doi = {10.1145/1599410.1599439},
 acmid = {1599439},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {continuation-passing style, defunctionalization, location-aware language, programming languages, trampolined style, web programming},
}

@inproceedings{MurphyVII:2004:SML:1018438.1021865,
 author = {Murphy VII, Tom and Crary, Karl and Harper, Robert and Pfenning, Frank},
 title = {A Symmetric Modal Lambda Calculus for Distributed Computing},
 booktitle = {Proceedings of the 19th Annual IEEE Symposium on Logic in Computer Science},
 series = {LICS '04},
 year = {2004},
 isbn = {0-7695-2192-4},
 pages = {286--295},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/LICS.2004.7},
 doi = {10.1109/LICS.2004.7},
 acmid = {1021865},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@phdthesis{Murphy:2008:MTM:1467784,
 author = {Murphy,VII., Tom},  
 advisor = {Harper, Robert and Crary, Karl},
 title = {Modal Types for Mobile Code},
 year = {2008},
 isbn = {978-0-549-64267-1},
 note = {AAI3314655},
 school = {Carnegie Mellon University},
 address = {Pittsburgh, PA, USA},
}

@inproceedings{Neubauer:2005:SPM:1040305.1040324,
 author = {Neubauer, Matthias and Thiemann, Peter},
 title = {From Sequential Programs to Multi-tier Applications by Program Transformation},
 booktitle = {Proceedings of the 32Nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '05},
 year = {2005},
 isbn = {1-58113-830-X},
 location = {Long Beach, California, USA},
 pages = {221--232},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1040305.1040324},
 doi = {10.1145/1040305.1040324},
 acmid = {1040324},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {application partioning, concurrency, type systems},
}

@inproceedings{Ganz:1999:TS:317636.317779,
 author = {Ganz, Steven E. and Friedman, Daniel P. and Wand, Mitchell},
 title = {Trampolined Style},
 booktitle = {Proceedings of the Fourth ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '99},
 year = {1999},
 isbn = {1-58113-111-9},
 location = {Paris, France},
 pages = {18--27},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/317636.317779},
 doi = {10.1145/317636.317779},
 acmid = {317779},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Reynolds:1972:DIH:800194.805852,
 author = {Reynolds, John C.},
 title = {Definitional Interpreters for Higher-order Programming Languages},
 booktitle = {Proceedings of the ACM Annual Conference - Volume 2},
 series = {ACM '72},
 year = {1972},
 location = {Boston, Massachusetts, USA},
 pages = {717--740},
 numpages = {24},
 url = {http://doi.acm.org/10.1145/800194.805852},
 doi = {10.1145/800194.805852},
 acmid = {805852},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Applicative language, Closure, Continuation, GEDANKEN, Higher-order function, Interpreter, J-operator, LISP, Lambda calculus, Language definition, Order of application, PAL, Programming language, Reference, SECD machine},
}

@inproceedings{Cooper:2006:LWP:1777707.1777724,
 author = {Cooper, Ezra K and Lindley, Sam and Wadler, Philip and Yallop, Jeremy},
 title = {Links: Web Programming Without Tiers},
 booktitle = {Proceedings of the 5th International Conference on Formal Methods for Components and Objects},
 series = {FMCO'06},
 year = {2007},
 isbn = {3-540-74791-5, 978-3-540-74791-8},
 location = {Amsterdam, The Netherlands},
 pages = {266--296},
 numpages = {31},
 url = {http://dl.acm.org/citation.cfm?id=1777707.1777724},
 acmid = {1777724},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{Flanagan:1993:ECC:155090.155113,
 author = {Flanagan, Cormac and Sabry, Amr and Duba, Bruce F. and Felleisen, Matthias},
 title = {The Essence of Compiling with Continuations},
 booktitle = {Proceedings of the ACM SIGPLAN 1993 Conference on Programming Language Design and Implementation},
 series = {PLDI '93},
 year = {1993},
 isbn = {0-89791-598-4},
 location = {Albuquerque, New Mexico, USA},
 pages = {237--247},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/155090.155113},
 doi = {10.1145/155090.155113},
 acmid = {155113},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Gay:1999:TSC:645393.756448,
 author = {Gay, Simon J. and Hole, Malcolm},
 title = {Types and Subtypes for Client-Server Interactions},
 booktitle = {Proceedings of the 8th European Symposium on Programming Languages and Systems},
 series = {ESOP '99},
 year = 1999,
 isbn = {3-540-65699-5},
 pages = {74--90},
 numpages = 17,
 url = {http://dl.acm.org/citation.cfm?id=645393.756448},
 acmid = 756448,
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
}

@inproceedings{Rastogi:2014:WPL:2650286.2650775,
 author = {Rastogi, Aseem and Hammer, Matthew A. and Hicks, Michael},
 title = {Wysteria: A Programming Language for Generic, Mixed-Mode Multiparty Computations},
 booktitle = {Proceedings of the 2014 IEEE Symposium on Security and Privacy},
 series = {SP '14},
 year = {2014},
 isbn = {978-1-4799-4686-0},
 pages = {655--670},
 numpages = {16},
 url = {http://dx.doi.org/10.1109/SP.2014.48},
 doi = {10.1109/SP.2014.48},
 acmid = {2650775},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Secure multi-party computation, Functional language, Dependent type system},
}

@inproceedings{Serrano2006,
author = {Serrano, Manuel and Gallesio, Erick and Loitsch, Florian},
booktitle = {Proceedings of the 1st Dynamic Languages Symposium},
doi = {10.1145/1176617.1176756},
isbn = {159593491X},
pages = {975--985},
title = {{Hop: a Language for Programming the Web 2.0}},
publisher = {ACM},
address = {Portland, OR, USA},
year = {2006}
}

@article{Serrano:2012:MPH:2240236.2240253,
 author = {Serrano, Manuel and Berry, G{\'e}rard},
 title = {{Multitier Programming in Hop}},
 journal = {Commun. ACM},
 issue_date = {August 2012},
 volume = {55},
 number = {8},
 month = aug,
 year = {2012},
 issn = {0001-0782},
 pages = {53--59},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/2240236.2240253},
 doi = {10.1145/2240236.2240253},
 acmid = {2240253},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{Serrano:2016:GH:3022670.2951916,
 author = {Serrano, Manuel and Prunet, Vincent},
 title = {{A Glimpse of Hopjs}},
 journal = {SIGPLAN Not.},
 issue_date = {September 2016},
 volume = {51},
 number = {9},
 month = sep,
 year = {2016},
 issn = {0362-1340},
 pages = {180--192},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/3022670.2951916},
 doi = {10.1145/3022670.2951916},
 acmid = {2951916},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Functional Programming, Web Programming},
} 

@inproceedings{Balat2006,
author = {Balat, Vincent},
booktitle = {Proceedings of the 2006 Workshop on ML (ML '06)},
doi = {10.1145/1159876.1159889},
isbn = {1-59593-483-9},
pages = {84--94},
title = {{Ocsigen: Typing Web Interaction with Objective Caml}},
year = {2006}
}


@article{Krishnamurthi:2007:IUP:1325174.1325176,
 author = {Krishnamurthi, Shriram and Hopkins, Peter Walton and Mccarthy, Jay and Graunke, Paul T. and Pettyjohn, Greg and Felleisen, Matthias},
 title = {Implementation and Use of the PLT Scheme Web Server},
 journal = {Higher Order Symbol. Comput.},
 issue_date = {December  2007},
 volume = {20},
 number = {4},
 month = dec,
 year = {2007},
 issn = {1388-3690},
 pages = {431--460},
 numpages = {30},
 url = {http://dx.doi.org/10.1007/s10990-007-9008-y},
 doi = {10.1007/s10990-007-9008-y},
 acmid = {1325176},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Applications, Conference management, Continuations, Interaction, Performance, Scheme, Web},
}

@article{Chlipala2015,
author = {Chlipala, Adam},
title = {Ur/Web: A Simple Model for Programming the Web},
year = {2015},
issue_date = {January 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {50},
number = {1},
issn = {0362-1340},
url = {https://doi.org/10.1145/2775051.2677004},
doi = {10.1145/2775051.2677004},
abstract = {The World Wide Web has evolved gradually from a document delivery platform to an architecture for distributed programming. This largely unplanned evolution is apparent in the set of interconnected languages and protocols that any Web application must manage. This paper presents Ur/Web, a domain-specific, statically typed functional programming language with a much simpler model for programming modern Web applications. Ur/Web's model is unified, where programs in a single programming language are compiled to other "Web standards" languages as needed; supports novel kinds of encapsulation of Web-specific state; and exposes simple concurrency, where programmers can reason about distributed, multithreaded applications via a mix of transactions and cooperative preemption. We give a tutorial introduction to the main features of Ur/Web and discuss the language implementation and the production Web applications that use it.},
journal = {SIGPLAN Not.},
month = jan,
pages = {153–165},
numpages = {13},
keywords = {remote procedure calls, encapsulation, web programming languages, relational databases, message passing, transactions, functional-reactive programming}
}




@inproceedings{Mccarthy2006,
author = {Mccarthy, J and Krishnamurthi, S},
booktitle = {Proceedings of Scheme and Functional Programming},
title = {{Interaction-safe State for the Web}},
year = {2006}
}

@inproceedings{Mccarthy2009,
author = {Mccarthy, J},
booktitle = {Proceedings of the ACM SIGPLAN International Conference on Functional Programming, ICFP},
doi = {10.1145/1596550.1596594},
isbn = {9781605583327},
issn = {15232867},
keywords = {Commercial applications; Expressive power; Key pro,Functional programming,Web services},
pages = {299--309},
title = {{Automatically RESTful web applications marking modular serializable continuations}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-70450193045{\&}partnerID=40{\&}md5=14ab760c161c997d160e7c702a08ae6f},
year = {2009}
}



@article{Queinnec2000,
author = {Queinnec, Christian},
doi = {10.1145/357766.351243},
isbn = {1-58113-202-6},
issn = {03621340},
journal = {ACM SIGPLAN Notices},
number = {9},
pages = {23--33},
title = {{The Influence of Browsers on Evaluators or, Continuations to Program Web Servers}},
url = {http://portal.acm.org/citation.cfm?doid=357766.351243},
volume = {35},
year = {2000}
}


@article{Queinnec2003,
author = {Queinnec, Christian},
doi = {10.1145/772970.772977},
issn = {03621340},
journal = {ACM SIGPLAN Notices},
number = {2},
pages = {57},
title = {{Inverting back the inversion of control or, continuations versus page-centric programming}},
url = {http://portal.acm.org/citation.cfm?doid=772970.772977},
volume = {38},
year = {2003}
}


@article{Queinnec2004,
author = {Queinnec, Christian},
journal= {Higher-Order and Symbolic Computation},
doi = {10.1007/s10990-004-4866-z},
issn = {13883690},
keywords = {Continuations,Hypertext,Scheme,WWW},
number = {4},
pages = {277--295},
title = {{Continuations and web servers}},
volume = {17},
year = {2004}
}


@article{Lindley2010,
author = {Lindley, Sam and Wadler, Philip and Yallop, Jeremy},
doi = {10.1017/S095679680999027X},
issn = {09567968},
journal = {Journal of Functional Programming},
number = {1},
pages = {51--69},
title = {{The arrow calculus}},
volume = {20},
year = {2010}
}


@article{Czaplicki2012,
author = {Czaplicki, Evan},
journal = {Master thesis, Harvard University},
number = {March},
pages = {55},
title = {{Elm: Concurrent FRP for Functional GUIs}},
url = {https://www.intranet.seas.harvard.edu/academics/undergraduate/computer-science/thesis/Czaplicki.pdf},
year = {2012}
}


@article{Niehren2006,
author = {Niehren, J. and Schwinghammer, J. and Smolka, G.},
doi = {10.1016/j.tcs.2006.08.016},
isbn = {3540290516},
issn = {03043975},
journal = {Theoretical Computer Science},
keywords = {Concurrency,Functional programming languages,Semantics},
number = {3},
pages = {338--356},
title = {{A concurrent lambda calculus with futures}},
volume = {364},
year = {2006}
}

@article{Wong2000,
author = {Wong, Limsoon},
doi = {10.1017/S0956796899003585},
issn = {09567968},
journal = {Journal of Functional Programming},
number = {1},
pages = {19--56},
title = {{Kleisli, a functional query system}},
volume = {10},
year = {2000}
}

@article{Serrano2010,
author = {Serrano, Manuel and Queinnec, Christian},
doi = {10.1007/s10990-010-9061-9},
issn = {13883690},
journal = {Higher-Order and Symbolic Computation},
keywords = {Multi-tier language,Semantics,Web programming},
number = {4},
pages = {409--431},
title = {{A multi-tier semantics for Hop}},
volume = {23},
year = {2010}
}

@article{Reynders2020,
author = {Reynders, Bob and Piessens, Frank and Devriese, Dominique},
doi = {10.22152/programming-journal.org/2020/4/6},
issn = {24737321},
journal = {The Art, Science, and Engineering of Programming},
volume = {4},
number = {3},
pages = {1--32},
title = {Gavial: Programming the Web with Multi-tier FRP},
year = {2020}
}

@inproceedings{Reynders2014,
author = {Reynders, Bob and Devriese, Dominique and Piessens, Frank},
booktitle = {Proceedings of the 2014 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming {\&} Software - Onward! '14},
doi = {10.1145/2661136.2661140},
isbn = {9781450332101},
pages = {55--68},
title = {{Multi-Tier Functional Reactive Programming for the Web}},
url = {http://dl.acm.org/citation.cfm?doid=2661136.2661140},
year = {2014}
}

@article{Boudol2012,
author = {Boudol, G{\'{e}}rard and Luo, Zhengqin and Rezk, Tamara and Serrano, Manuel},
doi = {10.1145/2220365.2220369},
isbn = {9781605589138},
issn = {01640925},
journal = {ACM Transactions on Programming Languages and Systems},
number = {2},
pages = {10},
title = {{Reasoning about Web Applications: An Operational Semantics for HOP}},
url = {http://doi.acm.org/10.1145/2220365.2220369},
volume = {34},
year = {2012}
}

@phdthesis{Radanne2017,
author = {Radanne, Gabriel},
number = {Ecole Doctorale 386},
pages = {156},
school = {University Paris Diderot},
title = {{Tierless Web programming in ML}},
year = {2017}
}


@article{choijfp2019,
  author    = {Kwanghoon Choi and
               Byeong{-}Mo Chang},
  title     = {A theory of {RPC} calculi for client-server model},
  journal   = {Journal of Functional Programming},
  volume    = {29},
  pages     = {e5},
  year      = {2019},
  url       = {https://doi.org/10.1017/S0956796819000029},
  doi       = {10.1017/S0956796819000029},
  timestamp = {Tue, 16 Apr 2019 16:14:57 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/jfp/ChoiC19},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Weisenburger:2018:DSD:3288538.3276499,
 author = {Weisenburger, Pascal and K\"{o}hler, Mirko and Salvaneschi, Guido},
 title = {Distributed System Development with ScalaLoci},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {November 2018},
 volume = {2},
 number = {OOPSLA},
 month = oct,
 year = {2018},
 issn = {2475-1421},
 pages = {129:1--129:30},
 articleno = {129},
 numpages = {30},
 url = {http://doi.acm.org/10.1145/3276499},
 doi = {10.1145/3276499},
 acmid = {3276499},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Distributed Programming, Multitier Programming, Placement Types, Reactive Programming, Scala},
}

@InProceedings{weisenburger_et_al:LIPIcs:2019:10795,
  author =	{Pascal Weisenburger and Guido Salvaneschi},
  title =	{{Multitier Modules}},
  booktitle =	{33rd European Conference on Object-Oriented Programming (ECOOP 2019)},
  pages =	{3:1--3:29},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-111-5},
  ISSN =	{1868-8969},
  year =	{2019},
  volume =	{134},
  editor =	{Alastair F. Donaldson},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2019/10795},
  URN =		{urn:nbn:de:0030-drops-107957},
  doi =		{10.4230/LIPIcs.ECOOP.2019.3},
  annote =	{Keywords: Distributed Programming, Multitier Programming, Abstract Peer Types, Placement Types, Module Systems, Scala}
}

@inproceedings{Murphy:2007:TDP:1793574.1793585,
 author = {Murphy,VII., Tom and Crary, Karl and Harper, Robert},
 title = {Type-safe Distributed Programming with ML5},
 booktitle = {Proceedings of the 3rd Conference on Trustworthy Global Computing},
 series = {TGC'07},
 year = {2008},
 isbn = {3-540-78662-7, 978-3-540-78662-7},
 location = {Sophia-Antipolis, France},
 pages = {108--123},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1793574.1793585},
 acmid = {1793585},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{Radanne:2018:TWP:3184558.3185953,
 author = {Radanne, Gabriel and Vouillon, J{\'e}r\^{o}me},
 title = {Tierless Web Programming in the Large},
 booktitle = {Companion Proceedings of the The Web Conference 2018},
 series = {WWW '18},
 year = {2018},
 isbn = {978-1-4503-5640-4},
 location = {Lyon, France},
 pages = {681--689},
 numpages = {9},
 url = {https://doi.org/10.1145/3184558.3185953},
 doi = {10.1145/3184558.3185953},
 acmid = {3185953},
 publisher = {International World Wide Web Conferences Steering Committee},
 address = {Republic and Canton of Geneva, Switzerland},
 keywords = {client/server, eliom, functional, ml, module, ocaml, separate compilation, web},
}

@inproceedings{Cheney:2014:EQR:2543728.2543738,
 author = {Cheney, James and Lindley, Sam and Radanne, Gabriel and Wadler, Philip},
 title = {Effective Quotation: Relating Approaches to Language-integrated Query},
 booktitle = {Proceedings of the ACM SIGPLAN 2014 Workshop on Partial Evaluation and Program Manipulation},
 series = {PEPM '14},
 year = {2014},
 isbn = {978-1-4503-2619-3},
 location = {San Diego, California, USA},
 pages = {15--26},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2543728.2543738},
 doi = {10.1145/2543728.2543738},
 acmid = {2543738},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {effects, language-integrated query, quotation},
}

@inproceedings{Serrano:2018:GIP:3192366.3192389,
 author = {Serrano, Alejandro and Hage, Jurriaan and Vytiniotis, Dimitrios and Peyton Jones, Simon},
 title = {Guarded Impredicative Polymorphism},
 booktitle = {Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI 2018},
 year = {2018},
 isbn = {978-1-4503-5698-5},
 location = {Philadelphia, PA, USA},
 pages = {783--796},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/3192366.3192389},
 doi = {10.1145/3192366.3192389},
 acmid = {3192389},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Type systems, constraint-based inference, impredicative polymorphism},
}

@misc{Wells1993,
  title = {Typability and type checking in the second-order lambda-calculus are equivalent and undecidable},
  author = {Wells, J., B.},
  year = {1993},
  URL = {https://open.bu.edu/handle/2144/1474},
  publisher = {OpenBU}
}


@inproceedings{emrich2019,
  author= {Frank Emrich and Sam Lindley and Jan Stolarek and James Cheney},
  title = {{FreezeML}: Complete and Easy Type Inference for First-Class Polymorphism},
  booktitle = {Proceedings of the 4th {ACM} {SIGPLAN} International Workshop on Type-Driven
               Development, TyDe@ICFP 2019, Berlin, Germany, August 22, 2019},
  publisher = {{ACM}},
  year      = {2019}
}

@article{mitchell1991,
title={Type inference with simple subtypes},
volume={1},
DOI={10.1017/S0956796800000113},
number={3},
journal={Journal of Functional Programming},
publisher={Cambridge University Press},
author={Mitchell, John C.},
year={1991},
pages={245–285}
}

@phdthesis{neubauer2007,
author = {Neubauer, Matthias},
pages = {212},
school = {Universität Freiburg},
title = {{Multi-tier programming}},
year = {2007}
}

@inproceedings{Lindley:2012:RET:2103786.2103798,
 author = {Lindley, Sam and Cheney, James},
 title = {Row-based Effect Types for Database Integration},
 booktitle = {Proceedings of the 8th ACM SIGPLAN Workshop on Types in Language Design and Implementation},
 series = {TLDI '12},
 year = {2012},
 isbn = {978-1-4503-1120-5},
 location = {Philadelphia, Pennsylvania, USA},
 pages = {91--102},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2103786.2103798},
 doi = {10.1145/2103786.2103798},
 acmid = {2103798},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {effect types, language integrated query, normalisation, polymorphism, row types},
}

@article{MILNER1978348,
title = "A theory of type polymorphism in programming",
journal = "Journal of Computer and System Sciences",
volume = "17",
number = "3",
pages = "348 - 375",
year = "1978",
issn = "0022-0000",
doi = "https://doi.org/10.1016/0022-0000(78)90014-4",
url = "http://www.sciencedirect.com/science/article/pii/0022000078900144",
author = "Robin Milner",
abstract = "The aim of this work is largely a practical one. A widely employed style of programming, particularly in structure-processing languages which impose no discipline of types, entails defining procedures which work well on objects of a wide variety. We present a formal type discipline for such polymorphic procedures in the context of a simple programming language, and a compile time type-checking algorithm W which enforces the discipline. A Semantic Soundness Theorem (based on a formal semantics for the language) states that well-type programs cannot “go wrong” and a Syntactic Soundness Theorem states that if W accepts a program then it is well typed. We also discuss extending these results to richer languages; a type-checking algorithm based on W is in fact already implemented and working, for the metalanguage ML in the Edinburgh LCF system."
}


@InProceedings{hillerstrm_et_al:LIPIcs:2017:7739,
  author ={Daniel Hillerstr{\"o}m and Sam Lindley and Robert Atkey and K. C. Sivaramakrishnan},
  title ={{Continuation Passing Style for Effect Handlers}},
  booktitle ={2nd International Conference on Formal Structures for Computation and Deduction (FSCD 2017)},
  pages ={18:1--18:19},
  series ={Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN ={978-3-95977-047-7},
  ISSN ={1868-8969},
  year ={2017},
  volume ={84},
  editor ={Dale Miller},
  publisher ={Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address ={Dagstuhl, Germany},
  URL ={http://drops.dagstuhl.de/opus/volltexte/2017/7739},
  URN ={urn:nbn:de:0030-drops-77394},
  doi ={10.4230/LIPIcs.FSCD.2017.18},
  annote ={Keywords: effect handlers, delimited control, continuation passing style}
}


@article{Fowler:2019:EAS:3302515.3290341,
 author = {Fowler, Simon and Lindley, Sam and Morris, J. Garrett and Decova, S\'{a}ra},
 title = {Exceptional Asynchronous Session Types: Session Types Without Tiers},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {January 2019},
 volume = {3},
 number = {POPL},
 month = jan,
 year = {2019},
 issn = {2475-1421},
 pages = {28:1--28:29},
 articleno = {28},
 numpages = {29},
 url = {http://doi.acm.org/10.1145/3290341},
 doi = {10.1145/3290341},
 acmid = {3290341},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {asynchrony, exceptions, session types, web programming},
}

@inproceedings{Harper:1995:CPU:199448.199475,
 author = {Harper, Robert and Morrisett, Greg},
 title = {Compiling Polymorphism Using Intensional Type Analysis},
 booktitle = {Proceedings of the 22Nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '95},
 year = {1995},
 isbn = {0-89791-692-1},
 location = {San Francisco, California, USA},
 pages = {130--141},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/199448.199475},
 doi = {10.1145/199448.199475},
 acmid = {199475},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{crary_weirich_morrisett_2002,
title={Intensional polymorphism in type-erasure semantics},
volume={12},
DOI={10.1017/S0956796801004282},
number={6},
journal={Journal of Functional Programming},
publisher={Cambridge University Press},
author={Crary, Karl and Weirich, Stephanie and Morrisett, Greg},
year={2002},
pages={567–600}
}


@conference{sbmf:2019,
 author = {Kwanghoon Choi and James Cheney and Simon Fowler and Sam Lindley},
 title = {A Polymorphic RPC Calculus},
 booktitle = {22th Brazilian Symposium on Formal Methods (SBMF)},
 note = {arXiv:1910.10988v2},
 address = {S{\~a}o Paulo, Brazil},
 month = {November},
 year = {2019}
}

@article{CHOI:scp2020,
title = "A polymorphic RPC calculus",
journal = "Science of Computer Programming",
volume = "197",
pages = "102499",
year = "2020",
issn = "0167-6423",
doi = "https://doi.org/10.1016/j.scico.2020.102499",
url = "http://www.sciencedirect.com/science/article/pii/S0167642320301088",
author = "Kwanghoon Choi and James Cheney and Simon Fowler and Sam Lindley"
}

@phdthesis{simon.fowler:phdthesis2019,
author = {Simon Fowler},
pages = {280},
school = {University of Edinburgh},
title = {{Typed Concurrent Functional Programming with Channels, Actors, and Sessions}},
year = {2019}
}

@InProceedings{fowler:LIPIcs:2020:13171,
  author =	{Simon Fowler},
  title =	{{Model-View-Update-Communicate: Session Types Meet the Elm Architecture}},
  booktitle =	{34th European Conference on Object-Oriented Programming (ECOOP 2020)},
  pages =	{14:1--14:28},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-154-2},
  ISSN =	{1868-8969},
  year =	{2020},
  volume =	{166},
  editor =	{Robert Hirschfeld and Tobias Pape},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum f{\"u}r Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{https://drops.dagstuhl.de/opus/volltexte/2020/13171},
  URN =		{urn:nbn:de:0030-drops-131717},
  doi =		{10.4230/LIPIcs.ECOOP.2020.14},
  annote =	{Keywords: Session types, concurrent programming, Model-View-Update}
}


@article{TAL1999,
author = {Morrisett, Greg and Walker, David and Crary, Karl and Glew, Neal},
title = {From System F to Typed Assembly Language},
year = {1999},
issue_date = {May 1999},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {3},
issn = {0164-0925},
url = {https://doi.org/10.1145/319301.319345},
doi = {10.1145/319301.319345},
journal = {ACM Trans. Program. Lang. Syst.},
month = may,
pages = {527–568},
numpages = {42},
keywords = {typed intermediate languages, certified code, closure conversion, type-directed compilation, secure extensible systems, typed assembly language}
}

@inproceedings{10.1145/2784731.2784741,
author = {Chlipala, Adam},
title = {An Optimizing Compiler for a Purely Functional Web-Application Language},
year = {2015},
isbn = {9781450336697},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2784731.2784741},
doi = {10.1145/2784731.2784741},
booktitle = {Proceedings of the 20th ACM SIGPLAN International Conference on Functional Programming},
pages = {10–21},
numpages = {12},
keywords = {pure functional programming, whole-program optimization, Web programming languages},
location = {Vancouver, BC, Canada},
series = {ICFP 2015}
}


@article{Xi:10.1145/640128.604150,
 author = {Xi, Hongwei and Chen, Chiyan and Chen, Gang},
 title = {Guarded Recursive Datatype Constructors},
 year = {2003},
 issue_date = {January 2003},
 publisher = {Association for Computing Machinery},
 address = {New York, NY, USA},
 volume = {38},
 number = {1},
 issn = {0362-1340},
 url = {https://doi.org/10.1145/640128.604150},
 doi = {10.1145/640128.604150},
 journal = {SIGPLAN Not.},
 month = jan,
 pages = {224–235},
 numpages = {12},
 keywords = {guarded recursive datatype constructors}
}

@techreport{cheney:tr2003-1901,
 author = {Cheney, James and Hinze, Ralf},
 title = {First-Class Phantom Types},
 year = {2003},
 institution = {Cornell University},
 number = {CUCIS TR2003-1901}
}

@article{wright95,
  author    = {Andrew K. Wright},
  title     = {Simple Imperative Polymorphism},
  journal   = {{LISP} Symb. Comput.},
  volume    = {8},
  number    = {4},
  pages     = {343--355},
  year      = {1995}
}

@article{weisenburger2020,
author = {Weisenburger, Pascal and Wirth, Johannes and Salvaneschi, Guido},
title = {A Survey of Multitier Programming},
year = {2020},
issue_date = {September 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {53},
number = {4},
issn = {0360-0300},
url = {https://doi.org/10.1145/3397495},
doi = {10.1145/3397495},
journal = {ACM Comput. Surv.},
month = sep,
articleno = {81},
numpages = {35},
keywords = {tierless languages, Multitier languages, distributed programming}
}

@article{weisenburger2020programming,
author = {Weisenburger, Pascal and Salvaneschi, Guido},
title = {Implementing a Language for Distributed Systems: Choices and Experiences with Type Level and Macro Programming in Scala},
year = {2020},
issue_date = {February 2020},
publisher = {AOSA},
volume = {4},
number = {3},
pages = {1-29},
numpages = {29},
journal = {The Art, Science, and Engineering of Programming},
month = feb,
articleno = {17}
}


@article{Kohler2020oopsla,
author = {K\"{o}hler, Mirko and Eskandani, Nafise and Weisenburger, Pascal and Margara, Alessandro and Salvaneschi, Guido},
title = {Rethinking Safe Consistency in Distributed Object-Oriented Programming},
year = {2020},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {OOPSLA},
url = {https://doi.org/10.1145/3428256},
doi = {10.1145/3428256},
journal = {Proc. ACM Program. Lang.},
month = nov,
articleno = {188},
numpages = {30},
keywords = {Java, replication, type systems, consistency}
}

@InProceedings{radanneaplas2016,
author="Radanne, Gabriel
and Vouillon, J{\'e}r{\^o}me
and Balat, Vincent",
editor="Igarashi, Atsushi",
title="Eliom: A Core ML Language for Tierless Web Programming",
booktitle="Programming Languages and Systems",
year="2016",
publisher="Springer International Publishing",
address="Cham",
pages="377--397",
abstract="Eliom is a dialect of OCaml for Web programming in which server and client pieces of code can be mixed in the same file using syntactic annotations. This allows to build a whole application as a single distributed program, in which it is possible to define in a composable way reusable widgets with both server and client behaviors. Our language also enables simple and type-safe communication. Eliom matches the specificities of the Web by allowing the programmer to interleave client and server code while maintaining efficient one-way server-to-client communication. The Eliom language is both sufficiently small to be implemented on top of an existing language and sufficiently powerful to allow expressing many idioms of Web programming.",
isbn="978-3-319-47958-3"
}


@inproceedings{radanneifl2016,
author = {Radanne, Gabriel and Papavasileiou, Vasilis and Vouillon, J\'{e}r\^{o}me and Balat, Vincent},
title = {Eliom: Tierless Web Programming from the Ground Up},
year = {2016},
isbn = {9781450347679},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3064899.3064901},
doi = {10.1145/3064899.3064901},
abstract = {Eliom is a dialect of OCaml for Web programming. It can be used both server and client-side. Server and client sections can also be mixed in the same file using syntactic annotations. This allows one to build a whole application as a single program, in which it is possible to define in a composable way reusable widgets with both server and client behaviors. Our language also enables simple type-safe communication. Eliom matches the specificities of the Web by allowing the programmer to interleave client and server code while maintaining efficient one-way server-to-client communication.We present how the language extensions introduced by Eliom enable a new paradigm for Web programming, and how this paradigm allows building complex libraries easily, safely, and in a composable manner.},
booktitle = {Proceedings of the 28th Symposium on the Implementation and Application of Functional Programming Languages},
articleno = {8},
numpages = {12},
keywords = {client/server, ML, Web, Eliom, OCaml, functional},
location = {Leuven, Belgium},
series = {IFL 2016}
}

@inproceedings{10.1145/2500365.2500582,
author = {Dunfield, Joshua and Krishnaswami, Neelakantan R.},
title = {Complete and Easy Bidirectional Typechecking for Higher-Rank Polymorphism},
year = {2013},
isbn = {9781450323260},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2500365.2500582},
doi = {10.1145/2500365.2500582},
abstract = {Bidirectional typechecking, in which terms either synthesize a type or are checked against a known type, has become popular for its scalability (unlike Damas-Milner type inference, bidirectional typing remains decidable even for very expressive type systems), its error reporting, and its relative ease of implementation. Following design principles from proof theory, bidirectional typing can be applied to many type constructs. The principles underlying a bidirectional approach to polymorphism, however, are less obvious. We give a declarative, bidirectional account of higher-rank polymorphism, grounded in proof theory; this calculus enjoys many properties such as eta-reduction and predictability of annotations. We give an algorithm for implementing the declarative system; our algorithm is remarkably simple and well-behaved, despite being both sound and complete.},
booktitle = {Proceedings of the 18th ACM SIGPLAN International Conference on Functional Programming},
pages = {429–442},
numpages = {14},
keywords = {higher-rank polymorphism, bidirectional typechecking},
location = {Boston, Massachusetts, USA},
series = {ICFP '13}
}


@inproceedings{10.1145/2034675.2034690,
author = {Epstein, Jeff and Black, Andrew P. and Peyton-Jones, Simon},
title = {Towards Haskell in the Cloud},
year = {2011},
isbn = {9781450308601},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2034675.2034690},
doi = {10.1145/2034675.2034690},
abstract = {We present Cloud Haskell, a domain-specific language for developing programs for a distributed computing environment. Implemented as a shallow embedding in Haskell, it provides a message-passing communication model, inspired by Erlang, without introducing incompatibility with Haskell's established shared-memory concurrency. A key contribution is a method for serializing function closures for transmission across the network. Cloud Haskell has been implemented; we present example code and some preliminary performance measurements.},
booktitle = {Proceedings of the 4th ACM Symposium on Haskell},
pages = {118–129},
numpages = {12},
keywords = {haskell, erlang, message-passing},
location = {Tokyo, Japan},
series = {Haskell '11}
}

@article{10.1145/2096148.2034690,
author = {Epstein, Jeff and Black, Andrew P. and Peyton-Jones, Simon},
title = {Towards Haskell in the Cloud},
year = {2011},
issue_date = {December 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {46},
number = {12},
issn = {0362-1340},
url = {https://doi.org/10.1145/2096148.2034690},
doi = {10.1145/2096148.2034690},
abstract = {We present Cloud Haskell, a domain-specific language for developing programs for a distributed computing environment. Implemented as a shallow embedding in Haskell, it provides a message-passing communication model, inspired by Erlang, without introducing incompatibility with Haskell's established shared-memory concurrency. A key contribution is a method for serializing function closures for transmission across the network. Cloud Haskell has been implemented; we present example code and some preliminary performance measurements.},
journal = {SIGPLAN Not.},
month = sep,
pages = {118–129},
numpages = {12},
keywords = {haskell, erlang, message-passing}
}

@phdthesis{coeffects-thesis,
  author       = {Petricek, Tomas}, 
  title        = {Context-aware programming languages},
  school       = {University of Cambridge},
  year         = {2017},
  month        = {3},
}

@article{10.1145/3428217,
author = {Griesemer, Robert and Hu, Raymond and Kokke, Wen and Lange, Julien and Taylor, Ian Lance and Toninho, Bernardo and Wadler, Philip and Yoshida, Nobuko},
title = {Featherweight Go},
year = {2020},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {OOPSLA},
url = {https://doi.org/10.1145/3428217},
doi = {10.1145/3428217},
abstract = {We describe a design for generics in Go inspired by previous work on Featherweight Java by Igarashi, Pierce, and Wadler. Whereas subtyping in Java is nominal, in Go it is structural, and whereas generics in Java are defined via erasure, in Go we use monomorphisation. Although monomorphisation is widely used, we are one of the first to formalise it. Our design also supports a solution to The Expression Problem.},
journal = {Proc. ACM Program. Lang.},
month = nov,
articleno = {149},
numpages = {29},
keywords = {Generics, Monomorphisation, Go}
}


@unpublished{cclr2021,
author = "Kwanghoon Choi and James Cheney and Sam Lindley and Bob Reynders",
title = "A Typed Slicing Compilation of the Polymorphic RPC Calculus",
note = "submitted",
month = "May",
year = "2021"
}